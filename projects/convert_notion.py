"""
Run this in a directory generated by notion to update folder and file names
and modify title

example usage:
first rename the notion folder to the desired running head (replace " " with "_")
in directory containing the notion html file
python convert_notion.py "Jan 01 20xx" (add name and date to title)
python convert_notion.py (don't add name and date to title)
"""

import os
import glob
import re
import sys

# step 1: update folder and file name
name = glob.glob("*.html")[0][:-5]
os.rename(name+".html", "index.html")
try:
	os.rename(name, "figures")
except:
	pass

# step 2: update html file
name = name.replace(" ","%20")
with open("index.html", 'r', encoding='utf-8') as f:
    content = f.read()

# update reference
content = content.replace(name.replace(" ","%20"), "figures")

# update tab title following folder name
new_title = os.path.basename(os.getcwd()).replace("_"," ")
pattern = r'<title>.*?</title>'
replacement = f'<title>{new_title}</title>'
content = re.sub(pattern, replacement, content, flags=re.IGNORECASE | re.DOTALL)

# center the page title
content = content.replace('<h1 class="page-title">', '<h1 class="page-title" style="text-align:center;">')

# break line at :
def replacer(match):
    return match.group(0).replace(': ', ':<br>')
pattern = r'<h1[^>]*>.*?</h1>'
content = re.sub(pattern, replacer, content, flags=re.DOTALL | re.IGNORECASE)

# disable table in header
content = content.replace('<table class="properties">', '<table class="properties" style="display: none;">')

# add name and date in header
if len(sys.argv) > 1:
    date = sys.argv[1] # 0 is just the python script
    name_and_date = f'<h2 style="text-align: center;">Wenrui Xu</h2><p style="text-align: center;">{date}</p>'
    content = content.replace('<p class="page-description"></p>', '<p class="page-description"></p>'+name_and_date)

# write back to file
with open("index.html", 'w', encoding='utf-8') as f:
    f.write(content)